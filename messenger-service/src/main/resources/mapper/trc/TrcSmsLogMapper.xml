<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teekee.messengerservice.mapper.trc.TrcSmsLogMapper">
  <resultMap id="BaseResultMap" type="com.teekee.messengerservice.entity.trc.TrcSmsLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="send_module" jdbcType="VARCHAR" property="sendModule" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="flag_send_successful" jdbcType="BIT" property="flagSendSuccessful" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="valid_time" jdbcType="TIMESTAMP" property="validTime" />
    <result column="flag_valid" jdbcType="BIT" property="flagValid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, send_module, keyword, content, user_id, mobile, serial_number, flag_send_successful, 
    create_time, valid_time, flag_valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trc_sms_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trc_sms_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.teekee.messengerservice.entity.trc.TrcSmsLog">
    insert into trc_sms_log (id, send_module, keyword, 
      content, user_id, mobile, 
      serial_number, flag_send_successful, create_time, 
      valid_time, flag_valid)
    values (#{id,jdbcType=INTEGER}, #{sendModule,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{serialNumber,jdbcType=VARCHAR}, #{flagSendSuccessful,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP},
      #{validTime,jdbcType=TIMESTAMP}, #{flagValid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.teekee.messengerservice.entity.trc.TrcSmsLog">
    insert into trc_sms_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendModule != null">
        send_module,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="flagSendSuccessful != null">
        flag_send_successful,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="validTime != null">
        valid_time,
      </if>
      <if test="flagValid != null">
        flag_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sendModule != null">
        #{sendModule,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="flagSendSuccessful != null">
        #{flagSendSuccessful,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validTime != null">
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flagValid != null">
        #{flagValid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.teekee.messengerservice.entity.trc.TrcSmsLog">
    update trc_sms_log
    <set>
      <if test="sendModule != null">
        send_module = #{sendModule,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="flagSendSuccessful != null">
        flag_send_successful = #{flagSendSuccessful,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validTime != null">
        valid_time = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flagValid != null">
        flag_valid = #{flagValid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teekee.messengerservice.entity.trc.TrcSmsLog">
    update trc_sms_log
    set send_module = #{sendModule,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      flag_send_successful = #{flagSendSuccessful,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      valid_time = #{validTime,jdbcType=TIMESTAMP},
      flag_valid = #{flagValid,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>