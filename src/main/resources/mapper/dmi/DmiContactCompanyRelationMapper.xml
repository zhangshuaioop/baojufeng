<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.springboot.mapper.dmi.DmiContactCompanyRelationMapper" >
  <resultMap id="BaseResultMap" type="com.platform.springboot.entity.dmi.DmiContactCompanyRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contact_id" property="contactId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="flag_major" property="flagMajor" jdbcType="BIT" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="flag_deleted" property="flagDeleted" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contact_id, company_id, flag_major, department, position, flag_deleted, create_time, create_person,
    update_time, update_person
  </sql>
  <select id="selectByPrimaryKey" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
    select 
      dccr.id,
      dc.contact_name,
      dc.telephone,
      dc.mobile,
      dc.contact_name_cn,
      dc.contact_name_en,
      dc.qq,
      dc.wechat,
      dccr.company_id,
      dccr.flag_major,
      dccr.department,
      dccr.contact_id,
      dccr.position
    from dmi_contact dc
    inner join dmi_contact_company_relation dccr on dc.id = dccr.contact_id
    where dccr.id = #{id,jdbcType=INTEGER}
    and dc.flag_deleted = 0
  </select>

  <select id="selectContactCompanyRelationByCompanyId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
    select dccr.id,
      dc.contact_name,
      dc.telephone,
      dc.mobile,
      dc.contact_name_cn,
      dc.contact_name_en,
      dc.qq,
      dc.wechat,
      dccr.company_id,
      dccr.flag_major,
      dccr.department,
      dccr.contact_id,
      dccr.update_time,
      dccr.position
    from dmi_contact dc
    inner join dmi_contact_company_relation dccr on dc.id = dccr.contact_id
    where dc.flag_deleted = 0
    and dccr.flag_deleted = 0
    and dccr.company_id = #{id,jdbcType=INTEGER}
    order by dccr.flag_major desc,dccr.create_time desc
  </select>

  <update id="resetIsMajorByCompanyId" parameterType="java.lang.Integer">
    update dmi_contact_company_relation dccr
    set dccr.flag_major = 0
    where dccr.company_id = #{id,jdbcType=INTEGER}
    and dccr.flag_major = 1
  </update>

  <select id="getCountByContactId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    count(id) ccount
    from dmi_contact_company_relation dccr
    where dccr.contact_id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getRelationByConCom" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    select
    count(id) ccount
    from dmi_contact_company_relation dccr
    where dccr.contact_id = #{contactId,jdbcType=INTEGER}
    and dccr.company_id = #{companyId,jdbcType=INTEGER}
    and flag_deleted = 0
  </select>

  <select id="hasMajorByCompanyId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    count(id) ccount
    from dmi_contact_company_relation dccr
    where dccr.company_id = #{id,jdbcType=INTEGER}
    and flag_major = 1
  </select>

  <insert id="insertSelective" parameterType="com.platform.springboot.entity.dmi.DmiContactCompanyRelation" >
    insert into dmi_contact_company_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contactId != null" >
        contact_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="flagMajor != null" >
        flag_major,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="flagDeleted != null" >
        flag_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contactId != null" >
        #{contactId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="flagMajor != null" >
        #{flagMajor,jdbcType=BIT},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.springboot.entity.dmi.DmiContactCompanyRelation" >
    update dmi_contact_company_relation
    <set >
      <if test="contactId != null" >
        contact_id = #{contactId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="flagMajor != null" >
        flag_major = #{flagMajor,jdbcType=BIT},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        flag_deleted = #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCompanyId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from dmi_contact_company_relation
    where company_id = #{companyId,jdbcType=INTEGER}
    and flag_deleted = 0
    and flag_major = 0
  </select>
</mapper>