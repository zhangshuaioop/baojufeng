<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.company.springboot.mapper.dmi.DmiContactStoreRelationMapper" >
  <resultMap id="BaseResultMap" type="com.company.springboot.entity.dmi.DmiContactStoreRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contact_id" property="contactId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="flag_major" property="flagMajor" jdbcType="BIT" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="flag_deleted" property="flagMajor" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contact_id, store_id, flag_major, position, flag_deleted, create_time, create_person, update_time,
    update_person
  </sql>
  <select id="selectByPrimaryKey" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
    select dc.contact_name,
      dc.contact_name_cn,
      dc.contact_name_en,
      dc.memo,
      dc.mobile,
      dc.qq,
      dc.telephone,
      dc.wechat,
      dcsr.*
    from dmi_contact dc
    inner join dmi_contact_store_relation dcsr on dc.id = dcsr.contact_id
    where dc.flag_deleted = 0
    and dcsr.flag_deleted = 0
    and dcsr.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectListByStoreId" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
    select dc.contact_name,
      dc.contact_name_cn,
      dc.contact_name_en,
      dc.memo,
      dc.mobile,
      dc.qq,
      dc.telephone,
      dc.wechat,
      dcsr.*
    from dmi_contact dc
    inner join dmi_contact_store_relation dcsr on dc.id = dcsr.contact_id
    where dc.flag_deleted = 0
    and dcsr.flag_deleted = 0
    and dc.store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <select id="selectMajorListByStoreId" resultType="java.util.HashMap" parameterType="java.lang.Integer" >
    select dc.contact_name,
    dc.contact_name_cn,
    dc.contact_name_en,
    dc.memo,
    dc.mobile,
    dc.qq,
    dc.telephone,
    dc.wechat,
    dcsr.*
    from dmi_contact dc
    inner join dmi_contact_store_relation dcsr on dc.id = dcsr.contact_id
    where dc.flag_deleted = 0
    and dcsr.flag_deleted = 0
    AND dcsr.flag_major = 1
    and store_id = #{storeId,jdbcType=INTEGER}
  </select>

  <update id="resetIsMajorByStoreId" parameterType="java.lang.Integer">
    update dmi_contact_store_relation
    set flag_major = 0
    where store_id = #{id,jdbcType=INTEGER}
    and flag_major = 1
  </update>

  <select id="getCountByContactId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    count(id) ccount
    from dmi_contact_store_relation
    where contact_id = #{id,jdbcType=INTEGER}
    and flag_deleted=0
  </select>

  <select id="getRelationByConStore" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    select
    count(id) ccount
    from dmi_contact_store_relation
    where contact_id = #{contactId,jdbcType=INTEGER}
    and store_id = #{storeId,jdbcType=INTEGER}
    and flag_deleted=0
  </select>

  <select id="hasMajorByStoreId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
    count(id) ccount
    from dmi_contact_store_relation
    where store_id = #{storeId,jdbcType=INTEGER}
    and flag_major = 1
    and flag_deleted=0
  </select>

  <insert id="insertSelective" parameterType="com.company.springboot.entity.dmi.DmiContactStoreRelation" >
    insert into dmi_contact_store_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contactId != null" >
        contact_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="flagMajor != null" >
        flag_major,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="flagDeleted != null" >
        flag_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contactId != null" >
        #{contactId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="flagMajor != null" >
        #{flagMajor,jdbcType=BIT},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.springboot.entity.dmi.DmiContactStoreRelation" >
    update dmi_contact_store_relation
    <set >
      <if test="contactId != null" >
        contact_id = #{contactId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="flagMajor != null" >
        flag_major = #{flagMajor,jdbcType=BIT},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        flag_deleted = #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectMajorList" parameterType="java.lang.Integer" resultType="com.company.springboot.entity.dmi.DmiContactStoreRelation">
    select
    <include refid="Base_Column_List"/>
    from dmi_contact_store_relation
    where store_id = #{id,jdbcType=INTEGER}
    and flag_deleted = 0
  </select>

  <select id="selectAllStore" parameterType="java.lang.Integer" resultType="com.company.springboot.entity.dmi.DmiContactStoreRelation">
    select
    <include refid="Base_Column_List"/>
    from dmi_contact_store_relation
    where store_id = #{storeId,jdbcType=INTEGER}
    and flag_deleted = 0

  </select>

</mapper>