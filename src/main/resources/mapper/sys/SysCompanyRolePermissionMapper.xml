<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.springboot.mapper.sys.SysCompanyRolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_person" jdbcType="INTEGER" property="createPerson" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_person" jdbcType="INTEGER" property="updatePerson" />
    <result column="flag_deleted" jdbcType="BIT" property="flagDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, company_id, role_id, permission_id, create_time, create_person, update_time, 
    update_person, flag_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_company_role_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_company_role_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    insert into sys_company_role_permission (id, company_id, role_id, 
      permission_id, create_time, create_person, 
      update_time, update_person, flag_deleted
      )
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{permissionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createPerson,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=INTEGER}, #{flagDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    insert into sys_company_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updatePerson != null">
        update_person,
      </if>
      <if test="flagDeleted != null">
        flag_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        #{updatePerson,jdbcType=INTEGER},
      </if>
      <if test="flagDeleted != null">
        #{flagDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    update sys_company_role_permission
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        update_person = #{updatePerson,jdbcType=INTEGER},
      </if>
      <if test="flagDeleted != null">
        flag_deleted = #{flagDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    update sys_company_role_permission
    set company_id = #{companyId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=INTEGER},
      flag_deleted = #{flagDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


<!--根据公司id和角色id删除-->
  <delete id="deleteByRoleAndCompanyId" parameterType="com.platform.springboot.entity.sys.SysCompanyRolePermission">
    delete from sys_company_role_permission
    where company_id = #{companyId,jdbcType=INTEGER}
    and role_id = #{roleId,jdbcType=INTEGER}
  </delete>


  <!-- 保存权限 -->
  <insert id="saveRoleAuthority">
    insert into sys_company_role_permission (company_id, role_id,
    permission_id, create_time, create_person,
    update_time, update_person, flag_deleted
    ) values
    <foreach collection ="permissionIds" item="permissionId" index= "index" separator =",">
      (#{companyId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
      #{permissionId,jdbcType=INTEGER}, NOW(), #{createPerson,jdbcType=INTEGER},
      NOW(), #{updatePerson,jdbcType=INTEGER}, 0
      )
    </foreach >
  </insert>

</mapper>