<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.springboot.mapper.atm.AtmCommChargeInvoiceChargeMapper">
    <resultMap id="BaseResultMap" type="com.platform.springboot.entity.atm.AtmCommChargeInvoiceCharge">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="company_id" property="companyId" jdbcType="INTEGER"/>
        <result column="bill_id" property="billId" jdbcType="INTEGER"/>
        <result column="invoice_id" property="invoiceId" jdbcType="VARCHAR"/>
        <result column="charge_fee" property="chargeFee" jdbcType="DECIMAL"/>
        <result column="remain_fee" property="remainFee" jdbcType="DECIMAL"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="charge_time" property="chargeTime" jdbcType="TIMESTAMP"/>
        <result column="charge_person" property="chargePerson" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_person" property="updatePerson" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, company_id, bill_id, invoice_id, charge_fee, remain_fee, memo, charge_time, charge_person, 
    update_time, update_person
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from atm_comm_charge_invoice_charge
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insertSelective" parameterType="com.platform.springboot.entity.atm.AtmCommChargeInvoiceCharge">
        insert into atm_comm_charge_invoice_charge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="billId != null">
                bill_id,
            </if>
            <if test="invoiceId != null">
                invoice_id,
            </if>
            <if test="chargeFee != null">
                charge_fee,
            </if>
            <if test="remainFee != null">
                remain_fee,
            </if>
            <if test="memo != null">
                memo,
            </if>
            <if test="chargeTime != null">
                charge_time,
            </if>
            <if test="chargePerson != null">
                charge_person,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updatePerson != null">
                update_person,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="billId != null">
                #{billId,jdbcType=INTEGER},
            </if>
            <if test="invoiceId != null">
                #{invoiceId,jdbcType=VARCHAR},
            </if>
            <if test="chargeFee != null">
                #{chargeFee,jdbcType=DECIMAL},
            </if>
            <if test="remainFee != null">
                #{remainFee,jdbcType=DECIMAL},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="chargeTime != null">
                #{chargeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="chargePerson != null">
                #{chargePerson,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.platform.springboot.entity.atm.AtmCommChargeInvoiceCharge">
        update atm_comm_charge_invoice_charge
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="billId != null">
                bill_id = #{billId,jdbcType=INTEGER},
            </if>
            <if test="invoiceId != null">
                invoice_id = #{invoiceId,jdbcType=VARCHAR},
            </if>
            <if test="chargeFee != null">
                charge_fee = #{chargeFee,jdbcType=DECIMAL},
            </if>
            <if test="remainFee != null">
                remain_fee = #{remainFee,jdbcType=DECIMAL},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="chargeTime != null">
                charge_time = #{chargeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="chargePerson != null">
                charge_person = #{chargePerson,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                update_person = #{updatePerson,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="invoiceChargeList" resultType="com.platform.springboot.entity.ret.atm.atmCommChargeInvoiceCharge.InvoiceChargeListRet"
            parameterType="java.lang.Integer">
        select
        chargeInvoice.invoice_number AS invoiceNumber,
        invoiceModel.invoice_title AS invoiceTitle,
        chargeInvoice.invoice_fee AS invoiceFee,
        chargeInvoiceCharge.remain_fee AS remainFee,
        chargeInvoiceCharge.charge_fee AS chargeFee,
        chargeInvoiceCharge.update_time AS updateTime,
        chargeInvoiceCharge.charge_time AS chargeTime
        from atm_comm_charge_invoice_charge chargeInvoiceCharge
        LEFT JOIN (atm_comm_charge_invoice chargeInvoice INNER JOIN dmi_invoice_model invoiceModel ON invoiceModel.id = chargeInvoice.invoice_model_id)
        ON chargeInvoice.id = chargeInvoiceCharge.invoice_id
        where chargeInvoiceCharge.invoice_id = #{invoiceId,jdbcType=INTEGER}
    </select>

    <select id="charge" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
        select sum(charge.charge_fee) from atm_comm_charge_invoice_charge charge,atm_comm_charge_invoice invoice
        where charge.bill_id = #{billId,jdbcType=INTEGER} and invoice.id = charge.invoice_id and invoice.flag_deleted = 0
    </select>

</mapper>