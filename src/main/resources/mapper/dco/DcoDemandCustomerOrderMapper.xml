<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.company.springboot.mapper.dco.DcoDemandCustomerOrderMapper" >
  <resultMap id="BaseResultMap" type="com.company.springboot.entity.dco.DcoDemandCustomerOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="VARCHAR" />
    <result column="origin_urgency_status" property="originUrgencyStatus" jdbcType="VARCHAR" />
    <result column="current_urgency_status" property="currentUrgencyStatus" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="flag_deleted" property="flagDeleted" jdbcType="BIT" />
    <result column="need_assessment" property="needAssessment" jdbcType="BIT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="process_status" property="processStatus" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="deal_last_time" property="dealLastTime" jdbcType="INTEGER" />
    <result column="deal_person" property="dealPerson" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="INTEGER" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="last_update_person" property="lastUpdatePerson" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.company.springboot.entity.dco.DcoDemandCustomerOrder" extends="BaseResultMap" >
    <result column="order_content" property="orderContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_code, order_type, origin_urgency_status, current_urgency_status, contact, 
    telephone, flag_deleted, need_assessment, company_id, store_id, process_status, order_status, 
    deal_last_time, deal_person, create_time, create_person, last_update_time, last_update_person
  </sql>
  <sql id="Blob_Column_List" >
    order_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dco_demand_customer_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.company.springboot.entity.dco.DcoDemandCustomerOrder" >
    insert into dco_demand_customer_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="originUrgencyStatus != null" >
        origin_urgency_status,
      </if>
      <if test="currentUrgencyStatus != null" >
        current_urgency_status,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="flagDeleted != null" >
        flag_deleted,
      </if>
      <if test="needAssessment != null" >
        need_assessment,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="processStatus != null" >
        process_status,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="dealLastTime != null" >
        deal_last_time,
      </if>
      <if test="dealPerson != null" >
        deal_person,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="lastUpdatePerson != null" >
        last_update_person,
      </if>
      <if test="orderContent != null" >
        order_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="originUrgencyStatus != null" >
        #{originUrgencyStatus,jdbcType=VARCHAR},
      </if>
      <if test="currentUrgencyStatus != null" >
        #{currentUrgencyStatus,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="needAssessment != null" >
        #{needAssessment,jdbcType=BIT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="dealLastTime != null" >
        #{dealLastTime,jdbcType=INTEGER},
      </if>
      <if test="dealPerson != null" >
        #{dealPerson,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatePerson != null" >
        #{lastUpdatePerson,jdbcType=INTEGER},
      </if>
      <if test="orderContent != null" >
        #{orderContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.springboot.entity.dco.DcoDemandCustomerOrder" >
    update dco_demand_customer_order
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="originUrgencyStatus != null" >
        origin_urgency_status = #{originUrgencyStatus,jdbcType=VARCHAR},
      </if>
      <if test="currentUrgencyStatus != null" >
        current_urgency_status = #{currentUrgencyStatus,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="flagDeleted != null" >
        flag_deleted = #{flagDeleted,jdbcType=BIT},
      </if>
      <if test="needAssessment != null" >
        need_assessment = #{needAssessment,jdbcType=BIT},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        process_status = #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="dealLastTime != null" >
        deal_last_time = #{dealLastTime,jdbcType=INTEGER},
      </if>
      <if test="dealPerson != null" >
        deal_person = #{dealPerson,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatePerson != null" >
        last_update_person = #{lastUpdatePerson,jdbcType=INTEGER},
      </if>
      <if test="orderContent != null" >
        order_content = #{orderContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getActiveOrderByObject" resultType="com.company.springboot.entity.dco.DcoDemandCustomerOrderDto" parameterType="com.company.springboot.entity.dco.DcoDemandCustomerOrderDto" >
    select
    customerOrder.order_code AS orderCode,
    brand.brand_name AS brandName,
    store.store_name AS storeName,
    customerOrder.order_content AS orderContent,
    customerOrder.order_type AS orderType,
    customerOrder.order_status AS orderStatus,
    customerOrder.current_urgency_status AS currentUrgencyStatus,
    operationType.nick_name AS createPersonName,
    customerOrder.create_time AS createTime,
    customerOrder.id AS id
    from dco_demand_customer_order customerOrder
    INNER JOIN dmi_store store ON customerOrder.store_id = store.id
    <if test="storeName != null and storeName != ''" >
      AND store.store_name  LIKE '%${storeName}%'
    </if>
    LEFT JOIN dmi_brand brand ON brand.id = store.brand_id
    <if test="brandId != null and brandId != 0" >
      AND store.brand_id  = #{brandId,jdbcType=INTEGER}
    </if>
    LEFT JOIN dco_demand_customer_order_operator_type operationType ON customerOrder.create_person = operationType.user_id
    where customerOrder.deal_person = #{dealPerson,jdbcType=INTEGER}
    AND FIND_IN_SET(customerOrder.process_status,'acceptCase,dealing,fieldService,needConfirm,thirdpartDealing')
    <if test="currentUrgencyStatus != null and currentUrgencyStatus != ''" >
      AND customerOrder.current_urgency_status = #{currentUrgencyStatus,jdbcType=VARCHAR}
    </if>
    <if test="orderType != null and orderType != ''" >
      AND customerOrder.order_type = #{orderType,jdbcType=VARCHAR}
    </if>
    <if test="orderStatus != null and orderStatus != 0" >
      AND customerOrder.order_status = #{orderStatus,jdbcType=INTEGER}
    </if>
    <if test="processStatus != null and processStatus != ''" >
      AND customerOrder.process_status = #{processStatus,jdbcType=VARCHAR}
    </if>
    <if test="companyId != null and companyId != 0" >
      AND customerOrder.company_id = #{companyId,jdbcType=INTEGER}
    </if>
    ORDER BY customerOrder.order_status DESC, customerOrder.create_time ASC
  </select>
  <select id="getInactiveOrderByObject" resultType="com.company.springboot.entity.dco.DcoDemandCustomerOrderDto" parameterType="com.company.springboot.entity.dco.DcoDemandCustomerOrderDto" >
    select
    customerOrder.order_code AS orderCode,
    brand.brand_name AS brandName,
    store.store_name AS storeName,
    customerOrder.order_content AS orderContent,
    customerOrder.order_type AS orderType,
    customerOrder.order_status AS orderStatus,
    customerOrder.current_urgency_status AS currentUrgencyStatus,
    operationType.nick_name AS createPersonName,
    customerOrder.create_time AS createTime,
    customerOrder.id AS id
    from dco_demand_customer_order customerOrder
    INNER JOIN dmi_store store ON customerOrder.store_id = store.id
    <if test="storeName != null and storeName != ''" >
      AND store.store_name  LIKE '%${storeName}%'
    </if>
    LEFT JOIN dmi_brand brand ON brand.id = store.brand_id
    <if test="brandId != null and brandId != 0" >
      AND store.brand_id  = #{brandId,jdbcType=INTEGER}
    </if>
    LEFT JOIN dco_demand_customer_order_operator_type operationType ON customerOrder.create_person = operationType.user_id
    where FIND_IN_SET(customerOrder.process_status,'closed,completed')
    <if test="currentUrgencyStatus != null and currentUrgencyStatus != ''" >
      AND customerOrder.current_urgency_status = #{currentUrgencyStatus,jdbcType=VARCHAR}
    </if>
    <if test="orderType != null and orderType != ''" >
      AND customerOrder.order_type = #{orderType,jdbcType=VARCHAR}
    </if>
    <if test="orderStatus != null and orderStatus != 0" >
      AND customerOrder.order_status = #{orderStatus,jdbcType=INTEGER}
    </if>
    <if test="processStatus != null and processStatus != ''" >
      AND customerOrder.process_status = #{processStatus,jdbcType=VARCHAR}
    </if>
    <if test="companyId != null and companyId != 0" >
      AND customerOrder.company_id = #{companyId,jdbcType=INTEGER}
    </if>
    <if test="orderContent != null and orderContent != ''" >
      AND customerOrder.order_content LIKE '%${orderContent}%'
    </if>
    ORDER BY customerOrder.order_status DESC, customerOrder.create_time ASC
  </select>
  <select id="getOrderByOrderId" resultType="com.company.springboot.entity.dco.DcoDemandCustomerOrderDetail" parameterType="java.lang.Integer" >
    select
    customerOrder.order_code AS orderCode,
    company.company_name AS companyName,
    customerOrder.order_status AS orderStatus,
    customerOrder.process_status AS processStatus,
    customerOrder.create_person AS createPerson,
    brand.brand_name AS brandName,
    customerOrder.order_type AS orderType,
    customerOrder.create_time AS createTime,
    store.store_name AS storeName,
    customerOrder.current_urgency_status AS currentUrgencyStatus,
    operationType.nick_name AS dealPersonName,
    customerOrder.contact AS contact,
    customerOrder.last_update_time AS lastUpdateTime,
    customerOrder.telephone AS telephone,
    customerOrder.deal_last_time AS dealLastTime,
    store.address_id AS addressId,
    store.building_id AS buildingId,
    store.building_code AS buildingCode,
    store.floor AS floor,
    store.room_code AS roomCode,
    customerOrder.deal_person AS dealPerson,
    customerOrder.order_content AS orderContent
    from dco_demand_customer_order customerOrder
    LEFT JOIN dmi_company_info company ON company.id = customerOrder.company_id
    LEFT JOIN dmi_store store ON store.id = customerOrder.store_id
    LEFT JOIN dmi_brand brand ON brand.id = store.brand_id
    LEFT JOIN dco_demand_customer_order_operator_type operationType ON customerOrder.deal_person = operationType.user_id
    WHERE customerOrder.id = #{id,jdbcType=INTEGER}
  </select>
</mapper>