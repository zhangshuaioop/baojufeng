<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teekee.blueoceanservice.mapper.syscompany.SysCompanyApiMapper">
  <resultMap id="BaseResultMap" type="com.teekee.blueoceanservice.entity.syscompany.SysCompanyApi">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="flag_deleted" jdbcType="BIT" property="flagDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, model, name, url, create_time, update_time, flag_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_company_api
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_company_api
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.teekee.blueoceanservice.entity.syscompany.SysCompanyApi">
    insert into sys_company_api (id, model, name, 
      url, create_time, update_time, 
      flag_deleted)
    values (#{id,jdbcType=INTEGER}, #{model,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{flagDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.teekee.blueoceanservice.entity.syscompany.SysCompanyApi">
    insert into sys_company_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="flagDeleted != null">
        flag_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flagDeleted != null">
        #{flagDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.teekee.blueoceanservice.entity.syscompany.SysCompanyApi">
    update sys_company_api
    <set>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flagDeleted != null">
        flag_deleted = #{flagDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teekee.blueoceanservice.entity.syscompany.SysCompanyApi">
    update sys_company_api
    set model = #{model,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      flag_deleted = #{flagDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>