<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teekee.waterdropservice.mapper.fdp.FdpFaultOrderProcessMapper">
    <resultMap id="BaseResultMap" type="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="company_id" property="companyId" jdbcType="INTEGER"/>
        <result column="store_id" property="storeId" jdbcType="INTEGER"/>
        <result column="fault_order_number" property="faultOrderNumber" jdbcType="VARCHAR"/>
        <result column="fault_type" property="faultType" jdbcType="VARCHAR"/>
        <result column="service_address" property="serviceAddress" jdbcType="VARCHAR"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="contact_id" property="contactId" jdbcType="INTEGER"/>
        <result column="flag_similar_fault" property="flagSimilarFault" jdbcType="BIT"/>
        <result column="similar_fault_id" property="similarFaultId" jdbcType="INTEGER"/>
        <result column="fault_description" property="faultDescription" jdbcType="VARCHAR"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="opearte_status" property="opearteStatus" jdbcType="VARCHAR"/>
        <result column="urgency_request" property="urgencyRequest" jdbcType="VARCHAR"/>
        <result column="service_date" property="serviceDate" jdbcType="TIMESTAMP"/>
        <result column="service_time_start" property="serviceTimeStart" jdbcType="INTEGER"/>
        <result column="service_time_end" property="serviceTimeEnd" jdbcType="INTEGER"/>
        <result column="flag_deleted" property="flagDeleted" jdbcType="BIT"/>
        <result column="flag_available" property="flagAvailable" jdbcType="BIT"/>
        <result column="flag_dispatch_request" property="flagDispatchRequest" jdbcType="BIT"/>
        <result column="final_cost" property="finalCost" jdbcType="DECIMAL"/>
        <result column="monetary_unit" property="monetaryUnit" jdbcType="VARCHAR"/>
        <result column="source_report_id" property="sourceReportId" jdbcType="INTEGER"/>
        <result column="sort_id" property="sortId" jdbcType="INTEGER"/>
        <result column="root_id" property="rootId" jdbcType="INTEGER"/>
        <result column="flag_first_order" property="flagFirstOrder" jdbcType="BIT"/>
        <result column="flag_has_multiple" property="flagHasMultiple" jdbcType="BIT"/>
        <result column="create_person" property="createPerson" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_person" property="updatePerson" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="flag_user_assm" property="flagUserAssm" jdbcType="BIT"/>
        <result column="flag_client_assm" property="flagClientAssm" jdbcType="BIT"/>
        <result column="fault_info_confirm_time" property="faultInfoConfirmTime" jdbcType="TIMESTAMP"/>
        <result column="other_fault_devices" property="otherFaultDevices" jdbcType="VARCHAR"/>
        <result column="flag_last_order" property="flagLastOrder" jdbcType="BIT"/>
        <result column="belong_person_id" property="belongPersonId" jdbcType="INTEGER"/>
        <result column="fault_type_model_id" property="faultTypeModelId" jdbcType="INTEGER"/>
        <result column="input_type" property="inputType" jdbcType="VARCHAR"/>
        <result column="cancel_reason" property="cancelReason" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, company_id, store_id, fault_order_number, fault_type, service_address, contact_name,
    telephone, contact_id, flag_similar_fault, similar_fault_id, fault_description, memo, 
    opearte_status, urgency_request, service_date, service_time_start, service_time_end, 
    flag_deleted, flag_available, flag_dispatch_request, final_cost, monetary_unit, source_report_id, sort_id,
    root_id, flag_first_order, flag_has_multiple, create_person, create_time, update_person, 
    update_time, flag_user_assm, flag_client_assm, fault_info_confirm_time, other_fault_devices,fault_type_model_id,input_type,cancel_reason
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fdp_fault_order_process
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insertSelective" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into fdp_fault_order_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="faultOrderNumber != null">
                fault_order_number,
            </if>
            <if test="faultType != null">
                fault_type,
            </if>
            <if test="serviceAddress != null">
                service_address,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="contactId != null">
                contact_id,
            </if>
            <if test="flagSimilarFault != null">
                flag_similar_fault,
            </if>
            <if test="similarFaultId != null">
                similar_fault_id,
            </if>
            <if test="faultDescription != null">
                fault_description,
            </if>
            <if test="memo != null">
                memo,
            </if>
            <if test="opearteStatus != null">
                opearte_status,
            </if>
            <if test="urgencyRequest != null">
                urgency_request,
            </if>
            <if test="serviceDate != null">
                service_date,
            </if>
            <if test="serviceTimeStart != null">
                service_time_start,
            </if>
            <if test="serviceTimeEnd != null">
                service_time_end,
            </if>
            <if test="flagDeleted != null">
                flag_deleted,
            </if>
            <if test="flagDispatchRequest != null">
                flag_dispatch_request,
            </if>
            <if test="flagAvailable != null">
                flag_available,
            </if>
            <if test="finalCost != null">
                final_cost,
            </if>
            <if test="monetaryUnit != null">
                monetary_unit,
            </if>
            <if test="sourceReportId != null">
                source_report_id,
            </if>
            <if test="sortId != null">
                sort_id,
            </if>
            <if test="rootId != null">
                root_id,
            </if>
            <if test="flagFirstOrder != null">
                flag_first_order,
            </if>
            <if test="flagHasMultiple != null">
                flag_has_multiple,
            </if>
            <if test="createPerson != null">
                create_person,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updatePerson != null">
                update_person,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="flagUserAssm != null">
                flag_user_assm,
            </if>
            <if test="flagClientAssm != null">
                flag_client_assm,
            </if>
            <if test="faultInfoConfirmTime != null">
                fault_info_confirm_time,
            </if>
            <if test="otherFaultDevices != null">
                other_fault_devices,
            </if>
            <if test="dealPersonId != null">
                deal_person_id,
            </if>
            <if test="belongPersonId != null">
                belong_person_id,
            </if>
            <if test="flagLastOrder != null">
                flag_last_order,
            </if>
            <if test="faultTypeModelId != null">
                fault_type_model_id,
            </if>
            <if test="inputType != null">
                input_type,
            </if>
            <if test="cancelReason != null">
                cancel_reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="faultOrderNumber != null">
                #{faultOrderNumber,jdbcType=VARCHAR},
            </if>
            <if test="faultType != null">
                #{faultType,jdbcType=VARCHAR},
            </if>
            <if test="serviceAddress != null">
                #{serviceAddress,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                #{contactId,jdbcType=INTEGER},
            </if>
            <if test="flagSimilarFault != null">
                #{flagSimilarFault,jdbcType=BIT},
            </if>
            <if test="similarFaultId != null">
                #{similarFaultId,jdbcType=INTEGER},
            </if>
            <if test="faultDescription != null">
                #{faultDescription,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="opearteStatus != null">
                #{opearteStatus,jdbcType=VARCHAR},
            </if>
            <if test="urgencyRequest != null">
                #{urgencyRequest,jdbcType=VARCHAR},
            </if>
            <if test="serviceDate != null">
                #{serviceDate,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceTimeStart != null">
                #{serviceTimeStart,jdbcType=INTEGER},
            </if>
            <if test="serviceTimeEnd != null">
                #{serviceTimeEnd,jdbcType=INTEGER},
            </if>
            <if test="flagDeleted != null">
                #{flagDeleted,jdbcType=BIT},
            </if>
            <if test="flagDispatchRequest != null">
                #{flagDispatchRequest,jdbcType=BIT},
            </if>
            <if test="flagAvailable != null">
                #{flagAvailable,jdbcType=BIT},
            </if>
            <if test="finalCost != null">
                #{finalCost,jdbcType=DECIMAL},
            </if>
            <if test="monetaryUnit != null">
                #{monetaryUnit,jdbcType=VARCHAR},
            </if>
            <if test="sourceReportId != null">
                #{sourceReportId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                #{sortId,jdbcType=INTEGER},
            </if>
            <if test="rootId != null">
                #{rootId,jdbcType=INTEGER},
            </if>
            <if test="flagFirstOrder != null">
                #{flagFirstOrder,jdbcType=BIT},
            </if>
            <if test="flagHasMultiple != null">
                #{flagHasMultiple,jdbcType=BIT},
            </if>
            <if test="createPerson != null">
                #{createPerson,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flagUserAssm != null">
                #{flagUserAssm,jdbcType=BIT},
            </if>
            <if test="flagClientAssm != null">
                #{flagClientAssm,jdbcType=BIT},
            </if>
            <if test="faultInfoConfirmTime != null">
                #{faultInfoConfirmTime,jdbcType=TIMESTAMP},
            </if>
            <if test="otherFaultDevices != null">
                #{otherFaultDevices,jdbcType=VARCHAR},
            </if>
            <if test="dealPersonId != null">
                #{dealPersonId,jdbcType=INTEGER},
            </if>
            <if test="belongPersonId != null">
                #{belongPersonId,jdbcType=INTEGER},
            </if>
            <if test="flagLastOrder != null">
                #{flagLastOrder,jdbcType=BIT},
            </if>
            <if test="faultTypeModelId != null">
                #{faultTypeModelId,jdbcType=INTEGER},
            </if>
            <if test="inputType != null">
                #{inputType,jdbcType=VARCHAR},
            </if>
            <if test="cancelReason != null">
                #{cancelReason,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
        update fdp_fault_order_process
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="faultOrderNumber != null">
                fault_order_number = #{faultOrderNumber,jdbcType=VARCHAR},
            </if>
            <if test="faultType != null">
                fault_type = #{faultType,jdbcType=VARCHAR},
            </if>
            <if test="serviceAddress != null">
                service_address = #{serviceAddress,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                contact_id = #{contactId,jdbcType=INTEGER},
            </if>
            <if test="flagSimilarFault != null">
                flag_similar_fault = #{flagSimilarFault,jdbcType=BIT},
            </if>
            <if test="similarFaultId != null">
                similar_fault_id = #{similarFaultId,jdbcType=INTEGER},
            </if>
            <if test="faultDescription != null">
                fault_description = #{faultDescription,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="opearteStatus != null">
                opearte_status = #{opearteStatus,jdbcType=VARCHAR},
            </if>
            <if test="urgencyRequest != null">
                urgency_request = #{urgencyRequest,jdbcType=VARCHAR},
            </if>
            <if test="serviceDate != null">
                service_date = #{serviceDate,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceTimeStart != null">
                service_time_start = #{serviceTimeStart,jdbcType=INTEGER},
            </if>
            <if test="serviceTimeEnd != null">
                service_time_end = #{serviceTimeEnd,jdbcType=INTEGER},
            </if>
            <if test="flagDeleted != null">
                flag_deleted = #{flagDeleted,jdbcType=BIT},
            </if>
            <if test="flagAvailable != null">
                flag_available = #{flagAvailable,jdbcType=BIT},
            </if>
            <if test="flagDispatchRequest != null">
                flag_dispatch_request = #{flagDispatchRequest,jdbcType=BIT},
            </if>
            <if test="finalCost != null">
                final_cost = #{finalCost,jdbcType=DECIMAL},
            </if>
            <if test="monetaryUnit != null">
                monetary_unit = #{monetaryUnit,jdbcType=VARCHAR},
            </if>
            <if test="sourceReportId != null">
                source_report_id = #{sourceReportId,jdbcType=INTEGER},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId,jdbcType=INTEGER},
            </if>
            <if test="rootId != null">
                root_id = #{rootId,jdbcType=INTEGER},
            </if>
            <if test="flagFirstOrder != null">
                flag_first_order = #{flagFirstOrder,jdbcType=BIT},
            </if>
            <if test="flagHasMultiple != null">
                flag_has_multiple = #{flagHasMultiple,jdbcType=BIT},
            </if>
            <if test="createPerson != null">
                create_person = #{createPerson,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                update_person = #{updatePerson,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flagUserAssm != null">
                flag_user_assm = #{flagUserAssm,jdbcType=BIT},
            </if>
            <if test="flagClientAssm != null">
                flag_client_assm = #{flagClientAssm,jdbcType=BIT},
            </if>
            <if test="faultInfoConfirmTime != null">
                fault_info_confirm_time = #{faultInfoConfirmTime,jdbcType=TIMESTAMP},
            </if>
            <if test="otherFaultDevices != null">
                other_fault_devices = #{otherFaultDevices,jdbcType=VARCHAR},
            </if>
            <if test="inputType != null">
                input_type = #{inputType,jdbcType=VARCHAR},
            </if>
            <if test="cancelReason != null">
                cancel_reason = #{cancelReason,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryFaultOrderListByObject" resultType="com.teekee.waterdropservice.entity.fdp.GetFaultOrderList"
            parameterType="com.teekee.waterdropservice.entity.fdp.GetFaultOrderListRequest">
        SELECT
        process.create_time AS createTime,
        company.company_name AS companyName,
        dispatchOrder.process_stage AS processStage,
        dispatchOrder.dispatch_status AS dispatchStatus,
        dispatchOrder.flag_dispatcher_confirm AS flagDispatcherConfirm,
        dispatchOrder.id AS dispatchOrderId,
        dispatchHrRlt.estimated_price AS estimatedPrice,
        dispatchHrRlt.estimated_price_unit AS estimatedPriceUnit,
        process.fault_type AS faultType ,
        request.id AS requestId ,
        reportInfo.id AS reportId,
        process.id,
        reportInfo.report_number AS reportNumber ,
        brand.brand_name AS brandName ,
        store.id AS storeId ,
        store.store_name AS storeName ,
        reportInfo.basic_fault_type AS basicFaultType ,
        process.fault_order_number AS faultOrderNumber,
        process.belong_person_id AS belongPersonId,
        process.source_report_id AS sourceReportId,
        process.opearte_status AS opearteStatus ,
        process.update_time AS updateTime ,
        process.root_id AS rootid ,
        process.sort_id AS sortId,
        process.flag_has_multiple flagHasMultiple,
        process.input_type AS inputType,
        CONCAT(
        IFNULL(dispatchHrRlt.estimated_price , 0) ,
        (
        SELECT
        description
        FROM
        cfg_data_dictionary
        WHERE
        type = 'MONETARY_UNIT'
        AND
        VALUE
        = dispatchHrRlt.estimated_monetary_unit
        )
        ) AS estimatedPrice,
        CONCAT(
        IFNULL(dispatchOrder.actual_price , 0) ,
        (
        SELECT
        description
        FROM
        cfg_data_dictionary
        WHERE
        type = 'MONETARY_UNIT'
        AND
        VALUE
        = dispatchOrder.actual_price_unit
        )
        ) AS actualPrice,
        CONCAT(
        IFNULL(dispatchHrRlt.estimated_cost , 0) ,
        (
        SELECT
        description
        FROM
        cfg_data_dictionary
        WHERE
        type = 'MONETARY_UNIT'
        AND
        VALUE
        = dispatchHrRlt.estimated_monetary_unit
        )
        ) AS estimatedCost,
        CASE process.urgency_request
        WHEN 'ASAP' THEN
        '尽快'
        WHEN 'AT' THEN
        CONCAT(
        '在 ' ,
        IFNULL(
        date_format(
        process.service_date ,
        '%Y-%c-%d'
        ) ,
        ''
        )
        )
        WHEN 'BEFORE' THEN
        CONCAT(
        '不晚于 ' ,
        IFNULL(
        date_format(
        process.service_date ,
        '%Y-%c-%d'
        ) ,
        ''
        )
        )
        ELSE
        ''
        END AS urgencyServiceDate ,
        process.deal_person_id AS dealpersonId ,
        users.username AS dealPerson ,
        process.id AS processId
        FROM
        (
        SELECT
        *
        FROM
        fdp_fault_order_process
        WHERE
        flag_deleted = 0
        <if test="companyId != null and companyId != 0">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="storeId != null and storeId != 0">
            and store_id = #{storeId,jdbcType=INTEGER}
        </if>
        <if test="opearteStatus != null">
            and opearte_status = #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="dealpersonId != null and dealpersonId !=0">
            and deal_person_id = #{dealpersonId,jdbcType=INTEGER}
        </if>
        <if test="faultType != null">
            and fault_type LIKE '%${faultType}%'
        </if>
        <if test="inputType != null">
            and input_type = #{inputType,jdbcType=VARCHAR}
        </if>
        <if test="faultOrderNumber != null">
            and fault_order_number LIKE '%${faultOrderNumber}%'
        </if>

        <if test="reportDateStart != null">
            <![CDATA[
            and create_time >=  DATE_FORMAT(#{reportDateStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')  ]]>
        </if>
        <if test="reportDateEnd != null">
            <![CDATA[
            and create_time < DATE_ADD(#{reportDateEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) ]]>
        </if>
        ) process
        LEFT JOIN(
        SELECT
        *
        FROM
        fdp_fault_report_info
        WHERE
        flag_deleted = 0
        <if test="basicFaultType != null">
            and basic_fault_type = #{basicFaultType,jdbcType=VARCHAR}
        </if>

        ) reportInfo ON process.source_report_id = reportInfo.id
        LEFT JOIN fdp_fault_dispatch_order dispatchOrder ON process.id = dispatchOrder.fault_order_id
        AND dispatchOrder.flag_deleted = 0

        LEFT JOIN fdp_fault_dispatch_hr_relation dispatchHrRlt ON dispatchHrRlt.dispatch_order_id = dispatchOrder.id AND
        dispatchHrRlt.flag_deleted = 0 AND dispatchHrRlt.flag_used = 1
        LEFT JOIN(
        dmi_store store
        LEFT JOIN dmi_brand brand ON store.brand_id = brand.id
        ) ON store.id = process.store_id
        LEFT JOIN dmi_company_info company on company.id = process.company_id
        <if test="dealpersonId == null or dealpersonId ==0">
            left join sys_company_users users on users.id = process.deal_person_id

        </if>
        <if test="dealpersonId != null and dealpersonId !=0">
            inner join sys_company_users users on users.id = process.deal_person_id
        </if>
        LEFT JOIN fdp_fault_order_dispatch_request request ON request.fault_order_id = process.id
        WHERE
        1=1


        <if test="status != 'finish'  and status == null">
            AND process.opearte_status != "CANCEL" AND process.opearte_status != "FINISH" AND process.opearte_status !=
            "COMPLETE"
        </if>
        <if test="status == 'finish'">
            AND process.opearte_status = "CANCEL" OR process.opearte_status = "FINISH" OR process.opearte_status =
            "COMPLETE"
        </if>


        and process.id in
        (


        SELECT
        max(t.id) processId

        FROM(


        SELECT
        process.fault_type AS faultType ,
        request.id AS requestId ,
        reportInfo.id AS reportId,
        process.id,
        reportInfo.report_number AS reportNumber ,
        brand.brand_name AS brandName ,
        store.id AS storeId ,
        store.store_name AS storeName ,
        reportInfo.basic_fault_type AS basicFaultType ,
        process.fault_order_number AS faultOrderNumber,
        process.belong_person_id AS belongPersonId,
        process.source_report_id AS sourceReportId,
        process.opearte_status AS opearteStatus ,
        process.update_time AS updateTime ,
        process.root_id AS rootid ,
        process.sort_id AS sortId,
        CONCAT(
        IFNULL(dispatchOrder.actual_price , 0) ,
        (
        SELECT
        description
        FROM
        cfg_data_dictionary
        WHERE
        type = 'MONETARY_UNIT'
        AND
        VALUE
        = dispatchOrder.actual_price_unit
        )
        ) AS actualPrice,
        CONCAT(
        IFNULL(dispatchHrRlt.estimated_cost , 0) ,
        (
        SELECT
        description
        FROM
        cfg_data_dictionary
        WHERE
        type = 'MONETARY_UNIT'
        AND
        VALUE
        = dispatchHrRlt.estimated_monetary_unit
        )
        ) AS estimatedCost,
        CASE process.urgency_request
        WHEN 'ASAP' THEN
        '尽快'
        WHEN 'AT' THEN
        CONCAT(
        '在 ' ,
        IFNULL(
        date_format(
        process.service_date ,
        '%Y-%c-%d'
        ) ,
        ''
        )
        )
        WHEN 'BEFORE' THEN
        CONCAT(
        '在 ' ,
        IFNULL(
        date_format(
        process.service_date ,
        '%Y-%c-%d'
        ) ,
        ''
        ) ,
        ' 之前'
        )
        ELSE
        ''
        END AS urgencyServiceDate ,
        process.deal_person_id AS dealpersonId ,
        users.username AS dealPerson ,
        process.id AS processId
        FROM
        (
        SELECT
        *
        FROM
        fdp_fault_order_process
        WHERE
        flag_deleted = 0
        <if test="companyId != null and companyId != 0">
            and company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="storeId != null and storeId != 0">
            and store_id = #{storeId,jdbcType=INTEGER}
        </if>
        <if test="opearteStatus != null">
            and opearte_status = #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="dealpersonId != null and dealpersonId !=0">
            and deal_person_id = #{dealpersonId,jdbcType=INTEGER}
        </if>
        <if test="inputType != null">
            and input_type = #{inputType,jdbcType=VARCHAR}
        </if>
        <if test="faultType != null">
            and fault_type LIKE '%${faultType}%'
        </if>
        <if test="reportDateStart != null">
            <![CDATA[
            and create_time >= DATE_FORMAT(#{reportDateStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')   ]]>
        </if>
        <if test="reportDateEnd != null">
            <![CDATA[
            and create_time <   DATE_ADD(#{reportDateEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) ]]>
        </if>
        ) process
        LEFT JOIN(
        SELECT
        *
        FROM
        fdp_fault_report_info
        WHERE
        flag_deleted = 0
        <if test="basicFaultType != null">
            and basic_fault_type = #{basicFaultType,jdbcType=VARCHAR}
        </if>

        ) reportInfo ON process.source_report_id = reportInfo.id
        LEFT JOIN fdp_fault_dispatch_order dispatchOrder ON process.id = dispatchOrder.fault_order_id
        AND dispatchOrder.flag_deleted = 0


        LEFT JOIN fdp_fault_dispatch_hr_relation dispatchHrRlt ON dispatchHrRlt.dispatch_order_id = dispatchOrder.id AND
        dispatchHrRlt.flag_deleted = 0
        LEFT JOIN(
        dmi_store store
        LEFT JOIN dmi_brand brand ON store.brand_id = brand.id
        ) ON store.id = process.store_id
        <if test="dealpersonId == null or dealpersonId ==0">
            left join sys_company_users users on users.id = process.deal_person_id

        </if>
        <if test="dealpersonId != null and dealpersonId !=0">
            inner join sys_company_users users on users.id = process.deal_person_id

        </if>
        LEFT JOIN fdp_fault_order_dispatch_request request ON request.fault_order_id = process.id
        WHERE
        1=1
        <if test="userCompleteTimeStart != null">
            <![CDATA[
          and dispatchOrder.flag_finish =1
            and dispatchOrder.last_deal_time >= date_format(#{userCompleteTimeStart,jdbcType=TIMESTAMP} , '%Y-%c-%d %h:%i:%s')  ]]>
        </if>
        <if test="userCompleteTimeEnd != null">
            <![CDATA[
        and dispatchOrder.flag_finish =1
         and dispatchOrder.last_deal_time < DATE_ADD(#{userCompleteTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY)  ]]>

        </if>
        ) t
        group by t.rootid

        )

    </select>

    <select id="getFaultOrderListByRootId" resultType="com.teekee.waterdropservice.entity.fdp.GetFaultOrderList"
            parameterType="java.lang.Integer">
        SELECT
            process.create_person AS createPerson,
            process.fault_type AS faultType,
            request.id AS requestId,
            reportInfo.id AS id,
            reportInfo.report_number AS reportNumber,
            brand.brand_name AS brandName,
            store.id AS storeId,
            store.store_name AS storeName,
            reportInfo.basic_fault_type AS basicFaultType,
            process.source_report_id AS sourceReportId,
            process.opearte_status AS opearteStatus,
            process.update_time AS updateTime,
            process.root_id AS rootid,
            process.sort_id AS sortId,
            CONCAT( IFNULL( dispatchOrder.actual_cost, 0 ), ( SELECT description FROM cfg_data_dictionary WHERE type = 'MONETARY_UNIT' AND VALUE = dispatchOrder.actual_monetary_unit ) ) AS estimatedCost,
            CONCAT( IFNULL( dispatchHrRlt.estimated_cost, 0 ), ( SELECT description FROM cfg_data_dictionary WHERE type = 'MONETARY_UNIT' AND VALUE = dispatchHrRlt.estimated_monetary_unit ) ) AS actualCost,
        CASE
            process.urgency_request
            WHEN 'ASAP' THEN
            '尽快'
            WHEN 'AT' THEN
            CONCAT( '在 ', IFNULL( date_format( process.service_date, '%Y-%c-%d' ), '' ) )
            WHEN 'BEFORE' THEN
            CONCAT( '在 ', IFNULL( date_format( process.service_date, '%Y-%c-%d' ), '' ), ' 之前' ) ELSE ''
            END AS urgencyServiceDate,
            process.update_person AS dealpersonId,
            users.username AS dealPerson,
            process.id AS processId
        FROM
            ( SELECT * FROM fdp_fault_order_process WHERE flag_deleted = 0 ) process
            LEFT JOIN ( SELECT * FROM fdp_fault_report_info WHERE flag_deleted = 0 ) reportInfo ON process.source_report_id = reportInfo.id
            LEFT JOIN fdp_fault_dispatch_order dispatchOrder ON process.id = dispatchOrder.fault_order_id
            AND dispatchOrder.flag_deleted = 0
            AND dispatchOrder.flag_finish = 1
            AND dispatchOrder.finish_type = 'COMPLETE'
            LEFT JOIN fdp_fault_dispatch_hr_relation dispatchHrRlt ON dispatchHrRlt.dispatch_order_id = dispatchOrder.id
            AND dispatchHrRlt.flag_deleted = 0
            LEFT JOIN ( dmi_store store LEFT JOIN dmi_brand brand ON store.brand_id = brand.id ) ON store.id = process.store_id
            LEFT JOIN sys_company_users users ON users.id = process.update_person
            LEFT JOIN fdp_fault_order_dispatch_request request ON request.fault_order_id = process.id
        WHERE
            process.root_id = #{rootId,jdbcType=INTEGER}
        ORDER BY
            process.fault_order_number,
            id DESC
    </select>

    <select id="show" parameterType="java.lang.Integer"
            resultType="com.teekee.waterdropservice.entity.fdp.EntityFaultReportInfoDetail">
        select

        process.fault_info_confirm_time as faultInfoConfirmTime,
        process.contact_id as contactId,
        companyInfo.id as companyId,
        store.id as storeId,
        companyInfo.company_name as companyName,
        store.store_name as storeName,
        process.fault_order_number as reportNumber,
        process.service_address as serviceAddress,
        process.contact_name as contactName,
        process.telephone as telephone,
        info.basic_fault_type as basicFaultType,
        process.fault_description as faultDescription,
        process.memo as memo,
        process.urgency_request as urgencyRequest,
        process.service_date as serviceDate,
        process.service_time_start as serviceTimeStart,
        process.service_time_end as serviceTimeEnd
        from (select * from fdp_fault_order_process where id = #{id,jdbcType=INTEGER} and flag_deleted = 0) process
        left join dmi_company_info companyInfo on companyInfo.id = process.company_id
        left join dmi_store store on store.id = process.store_id
        left join fdp_fault_report_info info on process.source_report_id = info.id
    </select>

    <select id="queryBySourceReportId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fdp_fault_order_process
        where id = #{id,jdbcType=INTEGER}
    </select>


    <select id="showProcess" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
            process.*,
            badd.road serviceAddress,
            company.company_name AS companyName,
            store.store_name AS storeName,
            rep.responses_type AS responsesType
        FROM
            fdp_fault_order_process AS process
        LEFT JOIN dmi_company_info AS company ON process.company_id = company.id
        LEFT JOIN dmi_store store ON process.store_id = store.id
        LEFT join bif_building_address badd on badd.id = store.address_id
        LEFT JOIN fdp_fault_report_info rep ON rep.id = process.source_report_id
        where process.id = #{id,jdbcType=INTEGER}
    </select>


    <select id="historyRecordList" resultType="com.teekee.waterdropservice.entity.fdp.HistoryRecordList"
            parameterType="java.lang.Integer">
        select
        process.update_time as finishDate,
        report.basic_fault_type as basicFaultType,
        report.report_date as reportDate,
        report.id as reportInfoId
        from (select store_id,update_time,source_report_id from fdp_fault_order_process where flag_deleted = 0 and store_id = #{storeId,jdbcType=INTEGER}
        and opearte_status = 'ORDERCOMPLETE') process
        inner join (select store_id,basic_fault_type,report_date,id from fdp_fault_report_info where flag_deleted = 0
        and store_id = #{storeId,jdbcType=INTEGER} order by report_date asc) report on report.id = process.source_report_id
    </select>

    <select id="selectNextId" resultMap="BaseResultMap">

    select id from fdp_fault_order_process
    ORDER BY id desc limit 1

    </select>

    <update id="updateById" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">

        update fdp_fault_order_process
        <set>

            <if test="opearteStatus != null">
                opearte_status = #{opearteStatus,jdbcType=VARCHAR},
            </if>
            <if test="rootId != null">
                root_id = #{rootId,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}

    </update>


    <update id="deleteProcessById" parameterType="java.util.HashMap">


        update fdp_fault_order_process
        set
        update_person = #{updatePerson,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        flag_deleted =#{flagDelete,jdbcType=BIT}
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>


    </update>


    <update id="updateBelongPersonIdByUserId" parameterType="java.util.HashMap">
        update fdp_fault_order_process
        set belong_person_id = #{belongPersonId,jdbcType=INTEGER},
        update_person = #{updatePerson,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>


    </update>


    <update id="updateByUserId" parameterType="java.util.HashMap">
        update fdp_fault_order_process
        set deal_person_id = #{dealPersonId,jdbcType=INTEGER},
        update_person = #{updatePerson,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>


    <update id="updateRootId" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
        update fdp_fault_order_process
        set root_id = #{rootId,jdbcType=INTEGER}

        where id = #{id,jdbcType=INTEGER}

    </update>

    <select id="selectOrgDealPersonId" parameterType="java.util.HashMap" resultType="java.util.HashMap">

        select deal_person_id as orgDealPersonId,id,belong_person_id belongPersonId
        from fdp_fault_order_process
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <update id="updateFlagHasMultiple" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">

        update fdp_fault_order_process
        set flag_has_multiple = #{flagHasMultiple,jdbcType=BIT}

        where id = #{rootId,jdbcType=INTEGER}


    </update>

    <update id="updateFlagLastOrderByRootId" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">

      update fdp_fault_order_process

       set flag_last_order = #{flagLastOrder,jdbcType=BIT}

      where root_id = #{rootId,jdbcType=INTEGER}

    </update>

    <update id="updateDispatchRequest" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
 update fdp_fault_order_process

       set flag_dispatch_request = #{flagDispatchRequest,jdbcType=BIT}

      where id = #{id,jdbcType=INTEGER}

    </update>
    <update id="updateProcessStatusByProcessId" parameterType="com.teekee.waterdropservice.entity.fdp.FdpFaultOrderProcess">
        update fdp_fault_order_process
        <set>
            <if test="opearteStatus != null">
                opearte_status = #{opearteStatus,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectRootId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select root_id rootId
        from fdp_fault_order_process
        where id =  #{processId,jdbcType=INTEGER}



    </select>
    <!--通过创建人查询故障单-->
    <select id="selectProcessByCreatePerson" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>
        FROM
        fdp_fault_order_process
        WHERE
        create_person =#{createPerson,jdbcType=INTEGER}
    </select>
    <!--查询客服工单清单-->
    <select id="getProcessListByObject" parameterType="com.teekee.waterdropservice.entity.fdp.ParamFdpProcessDetailed"
            resultType="com.teekee.waterdropservice.entity.fdp.GetFdpProcessDetailedList">
        SELECT
        dor.flag_finish AS flagFinish,
        dor.last_deal_time AS lastDealTime,
        pro.id AS processId,
        pro.fault_order_number AS faultOrderNumber,
        cop.company_name AS companyName,
        sto.store_name AS storeName,
        pro.input_type AS inputType,
        pro.fault_type AS faultType,
        bud.province,
        bud.city,
        pro.service_address AS serviceAddress,
        bad.brand_name AS brandName,
        pro.opearte_status AS opearteStatus,
        pro.contact_name AS contactName,
        pro.telephone,
        req.create_time dispatchCreateTime,
        hrrel.user_complete_time AS userCompleteTime,
        pro.update_time AS updateTime,
        pro.create_time AS createTime,
        sys.username createPerson,
        sus.username dealPerson,
        dor.actual_price AS actualPrice,
        dic.description AS actualPriceUnit,
        hrrel.estimated_price AS estimatedPrice,
        cdd.description AS estimatedPriceUnit
        FROM
        (SELECT * FROM fdp_fault_order_process ffop
        inner join (select id sysId from sys_company_users usr
        inner join (select act_type,act_Object_id from sys_company_users where id = #{userId,jdbcType=INTEGER}) t1
        on usr.act_type = t1.act_type and usr.act_Object_id = t1.act_Object_id) user1
        on ffop.deal_person_id = user1.sysId AND ffop.flag_deleted = 0) pro
        LEFT JOIN dmi_company_info cop ON cop.id = pro.company_id
        LEFT JOIN dmi_store sto ON sto.id = pro.store_id
        LEFT JOIN bif_building bud ON bud.id = sto.building_id
        LEFT JOIN dmi_brand bad ON bad.id = sto.brand_id
        LEFT JOIN fdp_fault_order_dispatch_request req on req.fault_order_id = pro.id
        LEFT JOIN fdp_fault_dispatch_order dor ON dor.fault_order_id = pro.id
        LEFT JOIN (SELECT * FROM fdp_fault_dispatch_hr_relation WHERE flag_used = 1) hrrel ON hrrel.dispatch_order_id =
        dor.id
        LEFT JOIN sys_company_users sys ON sys.id = pro.create_person
        LEFT JOIN sys_company_users sus ON sus.id = pro.deal_person_id
        LEFT JOIN cfg_data_dictionary dic on dor.actual_price_unit = dic.`value`
        LEFT JOIN cfg_data_dictionary cdd on hrrel.estimated_price_unit = cdd.`value`
        WHERE
        1 = 1
        <if test="companyId != null">
            AND pro.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="opearteStatus != null and opearteStatus != 'UNCOMPLETE' ">
            AND pro.opearte_status = #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="opearteStatus == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>
        <if test="dealPersonId != null">
            AND pro.deal_person_id = #{dealPersonId,jdbcType=INTEGER}
        </if>
        <if test="province != null">
            AND bud.province = #{province,jdbcType=VARCHAR}
        </if>
        <if test="city != null">
            AND bud.city = #{city,jdbcType=VARCHAR}
        </if>
        <if test="inputType != null">
            AND pro.input_type = #{inputType,jdbcType=VARCHAR}
        </if>
        <if test="createTimeStart != null">
            AND pro.create_time > DATE_FORMAT(#{createTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="createTimeEnd != null">
            AND pro.create_time &lt; DATE_ADD(#{createTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY)
        </if>
        <if test="userCompleteTimeStart != null">
            AND pro.update_time > DATE_FORMAT(#{userCompleteTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s') AND
            pro.opearte_status = "COMPLETE"
        </if>
        <if test="userCompleteTimeEnd != null">
            AND pro.update_time &lt; DATE_ADD(#{userCompleteTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) AND
            pro.opearte_status = "COMPLETE"
        </if>
        <if test="actualPriceStart != null">
            AND dor.actual_price >= #{actualPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="actualPriceEnd != null">
            AND dor.actual_price &lt;= #{actualPriceEnd,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceStart != null">
            AND hrrel.estimated_price >= #{estimatedPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceEnd != null">
            AND hrrel.estimated_price &lt;= #{estimatedPriceEnd,jdbcType=DECIMAL}
        </if>
    </select>

    <!--查询客服工单汇总-->
    <select id="selectProcessCollect" parameterType="com.teekee.waterdropservice.entity.fdp.ParamFdpProcessDetailed"
            resultType="com.teekee.waterdropservice.entity.fdp.GetFdpProcessCollectList">
        SELECT COUNT(pro.id) processTotal,
        SUM(rel.estimated_price) estimatedPriceCompleteNum,
        cdd.description estimatedPriceUnit,
        SUM(dr.actual_price) actualPriceCompleteNum,
        dic.description actualPriceUnit
        FROM (SELECT * FROM fdp_fault_order_process ffop
        inner join (select id sysId from sys_company_users usr
        inner join (select act_type,act_Object_id from sys_company_users where id = #{userId,jdbcType=INTEGER}) t1
        on usr.act_type = t1.act_type and usr.act_Object_id = t1.act_Object_id) user1
        on ffop.deal_person_id = user1.sysId AND ffop.flag_deleted = 0) pro
        LEFT JOIN fdp_fault_dispatch_order dr on pro.id = dr.fault_order_id
        LEFT JOIN (SELECT * FROM fdp_fault_dispatch_hr_relation WHERE flag_used = 1) rel on rel.dispatch_order_id =
        dr.id
        LEFT JOIN cfg_data_dictionary dic on dr.actual_price_unit = dic.`value`
        LEFT JOIN cfg_data_dictionary cdd on rel.estimated_price_unit = cdd.`value`
        WHERE 1=1
        <if test="source != 'report' and source != null">
            AND pro.input_type = #{source,jdbcType=VARCHAR}
        </if>
        <if test="source == 'report'">
            AND pro.input_type != "SYS"
        </if>
        <if test="status != null and status != 'UNCOMPLETE' ">
            AND pro.opearte_status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="status == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>

        <!--
         <if test="opearteStatus != null and opearteStatus != 'UNCOMPLETE' ">
            AND pro.opearte_status =  #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="opearteStatus == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>
         <if test="inputType != null">
            AND pro.input_type =  #{inputType,jdbcType=VARCHAR}
        </if>


        -->

        <if test="companyId != null">
            AND pro.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeStart != null">
            AND pro.create_time > DATE_FORMAT(#{createTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="createTimeEnd != null">
            AND pro.create_time &lt; DATE_ADD(#{createTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY)
        </if>
        <if test="userCompleteTimeStart != null">
            AND pro.update_time > DATE_FORMAT(#{userCompleteTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s') AND
            pro.opearte_status = "COMPLETE"
        </if>
        <if test="userCompleteTimeEnd != null">
            AND pro.update_time &lt; DATE_ADD(#{userCompleteTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) AND
            pro.opearte_status = "COMPLETE"
        </if>

        <!--
         <if test="actualPriceStart != null">
            AND dr.actual_price >= #{actualPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="actualPriceEnd != null">
            AND dr.actual_price &lt;= #{actualPriceEnd,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceStart != null">
            AND rel.estimated_price >= #{estimatedPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceEnd != null">
            AND rel.estimated_price &lt;= #{estimatedPriceEnd,jdbcType=DECIMAL}
        </if>
        -->

        <if test="dealPersonId != null">
            AND pro.deal_person_id = #{dealPersonId,jdbcType=INTEGER}
        </if>
        <if test="province != null">
            AND pro.store_id in (SELECT sto.id FROM dmi_store sto
            LEFT JOIN bif_building bud on bud.id = sto.building_id
            WHERE bud.province = #{province,jdbcType=VARCHAR})
        </if>
    </select>
    <!--查询客服工单雇主汇总-->
    <select id="selectDemandList" parameterType="com.teekee.waterdropservice.entity.fdp.ParamFdpProcessDetailed"
            resultType="com.teekee.waterdropservice.entity.fdp.GetDemandCollectList">
        SELECT
        pro.company_id companyId,
        cop.company_name companyName,
        COUNT(pro.id) demandTotal
        FROM (SELECT * FROM fdp_fault_order_process ffop
        inner join (select id sysId from sys_company_users usr
        inner join (select act_type,act_Object_id from sys_company_users where id = #{userId,jdbcType=INTEGER}) t1
        on usr.act_type = t1.act_type and usr.act_Object_id = t1.act_Object_id) user1
        on ffop.deal_person_id = user1.sysId AND ffop.flag_deleted = 0) pro
        LEFT JOIN fdp_fault_dispatch_order dr on pro.id = dr.fault_order_id
        LEFT JOIN (SELECT * FROM fdp_fault_dispatch_hr_relation WHERE flag_used = 1) rel on rel.dispatch_order_id =
        dr.id
        LEFT JOIN dmi_company_info cop on cop.id = pro.company_id
        WHERE 1=1
        <if test="status != null and status != 'UNCOMPLETE' ">
            AND pro.opearte_status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="status == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>

        <!--
        <if test="opearteStatus != null and opearteStatus != 'UNCOMPLETE' ">
            AND pro.opearte_status =  #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="opearteStatus == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>
         <if test="inputType != null">
            AND pro.input_type =  #{inputType,jdbcType=VARCHAR}
        </if>
        -->

        <if test="companyId != null">
            AND pro.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeStart != null">
            AND pro.create_time > DATE_FORMAT(#{createTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="createTimeEnd != null">
            AND pro.create_time &lt; DATE_ADD(#{createTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY)
        </if>
        <if test="userCompleteTimeStart != null">
            AND pro.update_time > DATE_FORMAT(#{userCompleteTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s') AND
            pro.opearte_status = "COMPLETE"
        </if>
        <if test="userCompleteTimeEnd != null">
            AND pro.update_time &lt; DATE_ADD(#{userCompleteTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) AND
            pro.opearte_status = "COMPLETE"
        </if>
        <!--
         <if test="actualPriceStart != null">
            AND dr.actual_price >= #{actualPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="actualPriceEnd != null">
            AND dr.actual_price &lt;= #{actualPriceEnd,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceStart != null">
            AND rel.estimated_price >= #{estimatedPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceEnd != null">
            AND rel.estimated_price &lt;= #{estimatedPriceEnd,jdbcType=DECIMAL}
        </if>
        -->

        <if test="dealPersonId != null">
            AND pro.deal_person_id = #{dealPersonId,jdbcType=INTEGER}
        </if>
        <if test="province != null">
            AND pro.store_id in (SELECT sto.id FROM dmi_store sto
            LEFT JOIN bif_building bud on bud.id = sto.building_id
            WHERE bud.province = #{province,jdbcType=VARCHAR})
        </if>
        GROUP BY pro.company_id
    </select>
    <!--查询客服工单处理人汇总-->
    <select id="selectDealPersonList" parameterType="com.teekee.waterdropservice.entity.fdp.ParamFdpProcessDetailed"
            resultType="com.teekee.waterdropservice.entity.fdp.GetBelongPersonCollerctList">
        SELECT
        pro.deal_person_id belongPersonId,
        sys.username belongPersonName,
        COUNT(pro.id) belongPersonTotal
        FROM (SELECT * FROM fdp_fault_order_process ffop
        inner join (select id sysId from sys_company_users usr
        inner join (select act_type,act_Object_id from sys_company_users where id = #{userId,jdbcType=INTEGER}) t1
        on usr.act_type = t1.act_type and usr.act_Object_id = t1.act_Object_id) user1
        on ffop.deal_person_id = user1.sysId AND ffop.flag_deleted = 0) pro
        LEFT JOIN sys_company_users sys on sys.id = pro.deal_person_id
        LEFT JOIN fdp_fault_dispatch_order dr on pro.id = dr.fault_order_id
        LEFT JOIN (SELECT * FROM fdp_fault_dispatch_hr_relation WHERE flag_used = 1) rel on rel.dispatch_order_id =
        dr.id
        WHERE 1=1
        <if test="status != null and status != 'UNCOMPLETE' ">
            AND pro.opearte_status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="status == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>
        <!--
        <if test="opearteStatus != null and opearteStatus != 'UNCOMPLETE' ">
            AND pro.opearte_status =  #{opearteStatus,jdbcType=VARCHAR}
        </if>
        <if test="opearteStatus == 'UNCOMPLETE' ">
            AND pro.opearte_status != "COMPLETE" AND pro.opearte_status != "CANCEL"
        </if>
         <if test="inputType != null">
            AND pro.input_type =  #{inputType,jdbcType=VARCHAR}
        </if>
        -->
        <if test="companyId != null">
            AND pro.company_id = #{companyId,jdbcType=INTEGER}
        </if>
        <if test="createTimeStart != null">
            AND pro.create_time > DATE_FORMAT(#{createTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="createTimeEnd != null">
            AND pro.create_time &lt; DATE_ADD(#{createTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY)
        </if>
        <if test="userCompleteTimeStart != null">
            AND pro.update_time > DATE_FORMAT(#{userCompleteTimeStart,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%i:%s') AND
            pro.opearte_status = "COMPLETE"
        </if>
        <if test="userCompleteTimeEnd != null">
            AND pro.update_time &lt; DATE_ADD(#{userCompleteTimeEnd,jdbcType=TIMESTAMP}, INTERVAL 1 DAY) AND
            pro.opearte_status = "COMPLETE"
        </if>
        <!--
         <if test="actualPriceStart != null">
            AND dr.actual_price >= #{actualPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="actualPriceEnd != null">
            AND dr.actual_price &lt;= #{actualPriceEnd,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceStart != null">
            AND rel.estimated_price >= #{estimatedPriceStart,jdbcType=DECIMAL}
        </if>
        <if test="estimatedPriceEnd != null">
            AND rel.estimated_price &lt;= #{estimatedPriceEnd,jdbcType=DECIMAL}
        </if>
        -->
        <if test="dealPersonId != null">
            AND pro.deal_person_id = #{dealPersonId,jdbcType=INTEGER}
        </if>
        <if test="province != null">
            AND pro.store_id in (SELECT sto.id FROM dmi_store sto
            LEFT JOIN bif_building bud on bud.id = sto.building_id
            WHERE bud.province = #{province,jdbcType=VARCHAR})
        </if>
        GROUP BY pro.deal_person_id
    </select>
</mapper>